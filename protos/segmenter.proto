// Copyright 2015, Google Inc.
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
// notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
// copyright notice, this list of conditions and the following disclaimer
// in the documentation and/or other materials provided with the
// distribution.
//     * Neither the name of Google Inc. nor the names of its
// contributors may be used to endorse or promote products derived from
// this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

syntax = "proto3";

//option java_multiple_files = true;
//option java_package = "io.grpc.examples.helloworld";
//option java_outer_classname = "HelloWorldProto";
//option objc_class_prefix = "HLW";

package segmenter;

// The TaskManager service definition.
service TaskManager {
    rpc StartTask (TaskConfig) returns(StartTaskReply) {}
    rpc StopTask (TaskId) returns(StopTaskReply) {}
    rpc GetPlayList(GetPlayListConfig) returns(GetPlayListReply) {}
}

message TaskConfig {
    string stream_url = 1;
    uint32 segment_time = 2;
}

message StartTaskReply {
    bool result = 1;
    uint32 id = 2;
    string errmsg = 3;
}

message TaskId {
    uint32 id = 1;
}

message StopTaskReply {
    bool result = 1;
    string errmsg = 2;
}

//from epoch in ms
message TimeInterval {
    int64 start_time = 1;
    int64 end_time = 2;
}

message GetPlayListConfig {
    uint32 id = 1;
    repeated TimeInterval time_intervals = 2;
}

message GetPlayListReply {
    bool result = 1;
    string errmsg = 2;
    string playlist_url = 3;
}

